<h4 class="card-title">Dropzone</h4>
<h6 class="card-subtitle">For multiple file upload put class <code>.dropzone</code> to form.</h6>
<div class="card">
  <div class="card-title">
    <h4>Google -> 여기 뭐 들어갈지 고민 ㄱㄱ</h4>
  </div>
  <div class="card-body">
    <form name="uploadform" id="uploadform" action='google/upload/<%=FolderID%>' method='post' enctype="multipart/form-data">
      <input type='file' name='userfile'>
      <button type="button" onclick='Upload()'>업로드</button>

    </form>

    <form name='action_google' method='post'>
    <button type="button" onClick='Download()'>다운로드</button>
      <button type="button" onClick='Delete()'>삭제</button>
      <td><input type="text" name="filename" placeholder="newname"></td>
      <button type="button" onClick='Rename()'>변경</button>
      <tr></tr>
      <select name="selectType">
        <option value="...">...</option>
        <option value="document">문서</option>
        <option value="PDF">PDF</option>
        <option value="video">video</option>
        <option value="image">이미지</option>
        <option value="audio">오디오</option>
        <option value="etc">기타</option>
      </select>
      <button type="button" onClick='Select()'>골라보기</button>
      <div class="table-responsive">
        <div class="dropzone" name='google-dropzone'>여기로 파일을 드래그해서 업로드 할 수 있습니다</div>
        <div class='current-folder' name="<%= FolderID %>"></div>
        <table class="table table-hover" id="table_google">
          <thead>
            <tr>
              <td> </td>
              <td>번호</td>
              <td>파일형식</td>
              <td>파일이름</td>
              <td>올린날짜</td>
              <td>파일용량</td>
            </tr>
          </thead>
          <!-- 이전 폴더로 이동 -->
          <tbody>
          <%
          function getImagePath(name){
            var splitdata = name.split(".");
            var mimetype = splitdata[splitdata.length-1];
            var imagesrc='';
            if(mimetype=='jpg'||mimetype=='jpeg'||mimetype=='png'||mimetype=='tiff'||mimetype=='tif'||mimetype=='gif'||mimetype=='bmp'){
              imagesrc='icons/filetype-icon/jpg.png'
            }
            else if(mimetype==='avi'){
              imagesrc='icons/filetype-icon/avi.png';
            }
            else if(mimetype==='csv'){
              imagesrc='icons/filetype-icon/csv.png';
            }
            else if(mimetype==='doc'){
              imagesrc='icons/filetype-icon/doc.png';
            }
            else if(mimetype==='iso'){
              imagesrc='icons/filetype-icon/iso.png';
            }
            else if(mimetype==='mp3'){
              imagesrc='icons/filetype-icon/mp3.png';
            }
            else if(mimetype==='mp4'){
              imagesrc='icons/filetype-icon/mp4.png';
            }
            else if(mimetype==='pdf'){
              imagesrc='icons/filetype-icon/pdf.png';
            }
            else if(mimetype==='ppt'||mimetype=='pptx'){
              imagesrc='icons/filetype-icon/ppt.png';
            }
            else if(mimetype==='svg'){
              imagesrc='icons/filetype-icon/svg.png';
            }
            else if(mimetype==='txt'){
              imagesrc='icons/filetype-icon/txt.png';
            }
            else if(mimetype==='xls'){
              imagesrc='icons/filetype-icon/xls.png';
            }
            else if(mimetype==='zip'){
              imagesrc='icons/filetype-icon/zip.png';
            }
            else{
              imagesrc='icons/filetype-icon/file.png';
            }

            return imagesrc;
        }

                  <!--byte to kb,mb,gb  -->
                  function formatBytes(bytes,decimals) {
                     if(bytes == 0) return '0 Bytes';
                     var k = 1024,
                         dm = decimals || 2,
                         sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
                         i = Math.floor(Math.log(bytes) / Math.log(k));
                     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
                  }
                    if(filelist.length>0){
                       for(var i=0; i< filelist.length; i++)
                       {
                            if(i==0){
                              var oneItem = filelist[0];
                              %>
            <tr ondrop="dropFormove(event)" ondragover="allowDrop(event)" value="<%=oneItem%>">

                <td data-id='<%=oneItem%>'></td>
              <td>/</td>
              <!--폴더라면 폴더 ID를 넘겨서 다시 URL을 전송한다.-->
              <td data-id=<%=oneItem%>><a href="#" onclick="moveFolder_google(this);" value='<%=oneItem%>'>..</a></td>
              <!-- <td><a href="http://localhost:3000/google/<%=oneItem%>">..</a></td> -->
              <td data-id='<%=oneItem%>'></td>
              <td data-id='<%=oneItem%>'></td>
              <td data-id='<%=oneItem%>'></td>
            </tr>
            <%
                              }
                              else{
                                    var oneItem = filelist[i];
                                    var size = formatBytes(oneItem.size,3);
                                    if(oneItem.mimeType=="application/vnd.google-apps.folder"){
                                      %>
              <tr ondrop="dropFormove(event)" ondragover="allowDrop(event)" value="<%=oneItem.id%>" class="folder-row">
                <td data-id='<%=oneItem.id%>'><input type="checkbox" name="id" class="checkbox" value="<%=oneItem.id%>"></td>
                <td data-id='<%=oneItem.id%>'>
                  <%=i%>
                </td>
                <td data-id='<%=oneItem.id%>'>
                  <img name="imgsrc" src="icons/filetype-icon/folder.png" width="64" height="64"/>
                </td>
                <!--폴더라면 폴더 ID를 넘겨서 다시 URL을 전송한다.-->
                <td data-id='<%=oneItem.id%>'>
                  <a href="#" onclick="moveFolder_google(this);" value='<%=oneItem.id%>'>
                    <%=oneItem.name%>
                  </a>
                </td>
                <!-- <a href="#"><%=oneItem.name%></a> -->
                <!-- <td><a href="http://localhost:3000/google/<%=oneItem.id%>"><%=oneItem.name%></a></td> -->

                <td data-id='<%=oneItem.id%>'>
                  <%=oneItem.modifiedTime%>
                </td>
                <td data-id='<%=oneItem.id%>'>
                  <%=size%>
                </td>
              </tr>
              <%

                                    }
                              else{
                                %>
                  <tr ondragstart="dragStart(event)" draggable="true" value="<%=oneItem.id%>" class="file-row">
                    <td data-id='<%=oneItem.id%>'><input type="checkbox" name="id" class="checkbox" value="<%=oneItem.id%>"></td>
                    <td data-id='<%=oneItem.id%>'>
                    <%=i%>
                  </td>
                  <td data-id='<%=oneItem.id%>'>
                    <img name="imgsrc" src="<%=getImagePath(oneItem.name)%>"width="64" height="64"/>
                  </td>
                  <td data-id='<%=oneItem.id%>'>
                    <%=oneItem.name%>
                  </td>
                  <td data-id='<%=oneItem.id%>'>
                    <%=oneItem.modifiedTime%>
                  </td>
                  <td data-id='<%=oneItem.id%>'>
                    <%=size%>
                  </td>
                </tr>
                <%
                            }
                        }
                      }
                    }
                  %>
          </tbody>
        </table>
      </div>
      <!-- end of table-responsive -->
    </form>
  </div>
  <!-- end of card-body -->
</div>
<!-- end of card -->

<script language=javascript>

  function dragStart(event) {
    event.dataTransfer.setData("data", event.target.attributes[2].nodeValue);
    console.log(event.target);
  }

  function allowDrop(event) {
    event.preventDefault();
  }

  function dropFormove(event) {
    event.preventDefault();
    var fileId = event.dataTransfer.getData("data");
    var folderId = event.target.dataset.id;
    console.log(event);
    var body = {
      "fileId": fileId,
      "folderId": folderId
    }
    $.ajax({
      type: "POST",
      url: "google/mvdir/<%=FolderID%>",
      async: true,
      data: body,
      dataType: "JSON",
      success: function(json) {
        console.log(json);
        $('.replace').load("google/folder/<%=FolderID%>", function(){
          $.getScript('/js/dropzone.js', function(data, textStatus, jqxhr) {
            console.log("load dropzone.js: " + textStatus);
          });
          $.getScript('/js/context_menu.js', function(data, textStatus, jqxhr) {
            console.log("load context_menu.js: " + textStatus);
          });
        });
      },
      beforeSend: function() {
        // (이미지 보여주기 처리)
        $('.wrap-loading').removeClass('display-none');
      },
      complete: function() {
        // (이미지 감추기 처리)
        $('.wrap-loading').addClass('display-none');
      },
      error: function(error) {
        console.log(error);
      }
    });
  }



  function Download() {
  // 체크박스의 갯수를 변수에 담는다.
  var chklen = action_google.name.length;
  var fileId = '';
  // 체크박스 갯수만큼 for 문을 돌려 체크된 놈의 value값을 가져온다.
  for (i = 0; i < chklen; i++) {
    if (action_google.id[i].checked == true) {
      fileId = action_google.id[i].value;
      break;
    }
  }
  action_google.action = 'google/download';
      $('.replace').load("google/folder/<%=FolderID%>");
      action_google.submit();

}


  function Rename() {
  // 체크박스의 갯수를 변수에 담는다.
  var chklen = action_google.name.length;
  var fileId = '';
  // 체크박스 갯수만큼 for 문을 돌려 체크된 놈의 value값을 가져온다.
  for (i = 0; i < chklen; i++) {
    if (action_google.id[i].checked == true) {
      fileId = action_google.id[i].value;
      break;
    }
  }
  if (fileId == '') {
    alert("이름을 변경하실 파일이나 폴더를 체크해주세요");
  } else {
    var newname = action_google.filename.value;

    var body = {
      "fileId": fileId,
      "newname": newname
    }

    $.ajax({
      type: "POST",
      url: "google/rename/<%=FolderID%>",
      async: true,
      data: body,
      dataType: "JSON",
      success: function(json) {
        console.log(json);

        $('.replace').load("google/folder/<%=FolderID%>");
      },
      beforeSend: function() {
        // (이미지 보여주기 처리)
        $('.wrap-loading').removeClass('display-none');
      },
      complete: function() {
        // (이미지 감추기 처리)
        $('.wrap-loading').addClass('display-none');
      },
      error: function(error) {
        console.log(error);
      }
    });
  }
}

  function Delete() {
  // 체크박스의 갯수를 변수에 담는다.
  var chklen = action_google.name.length;
  var fileId = '';
  // 체크박스 갯수만큼 for 문을 돌려 체크된 놈의 value값을 가져온다.
  for (i = 0; i < chklen; i++) {
    if (action_google.id[i].checked == true) {
      fileId = action_google.id[i].value;
      break;
    }
  }
  if (fileId == '') {
    alert("삭제하실 파일이나 폴더를 체크해주세요");
  } else {
    var body = {
      "fileId": fileId,
    }

    $.ajax({
      type: "POST",
      url: "google/delete/",
      async: true,
      data: body,
      dataType: "JSON",
      success: function(json) {
        console.log(json);

        $('.replace').load("google/folder/<%=FolderID%>");
      },
      beforeSend: function() {
        // (이미지 보여주기 처리)
        $('.wrap-loading').removeClass('display-none');
      },
      complete: function() {
        // (이미지 감추기 처리)
        $('.wrap-loading').addClass('display-none');
      },
      error: function(error) {
        console.log(error);
      }
    });
  }
}

function Select(){
    var selectType = action_google.selectType.value;
    var fileName=action_google.filename.value;

    var body= {
      "selectType" : selectType,
      "fileName" : fileName
    }
    console.log(selectType);

    $.ajax({
          type: "POST",
          url: "google/searchtype/",
          async: false,
          data: body,
          dataType: "JSON",
          success: function(json) {
             var obj = JSON.stringify(json);
             console.log(obj);
            $('.replace').load("google/search/",{list:json});
          },
          error: function(error) {
            console.log(error);
          }
      });
}

  function Upload() {
   var form = $('#uploadform')[0];
   var formData = new FormData(form);

   $.ajax({
     type: "POST",
     url: "google/upload/<%=FolderID%>",
     async: true,
     data: formData,
     processData: false,
     contentType: false,
     success: function(json) {
       console.log(json);
       $('.replace').load("google/folder/<%=FolderID%>");
     },
      beforeSend: function() {
        // (이미지 보여주기 처리)
        $('.wrap-loading').removeClass('display-none');
      },
      complete: function() {
        // (이미지 감추기 처리)
        $('.wrap-loading').addClass('display-none');
      },
      error: function(error) {
        console.log(error);
      }
   });
 }

String.prototype.hashCode = function() {
  var hash = 0,
    i, chr;
  if (this.length === 0) return hash;
  for (i = 0; i < this.length; i++) {
    chr = this.charCodeAt(i);
    hash = ((hash << 5) - hash) + chr;
    hash |= 0; // Convert to 32bit integer
  }
  return hash;
};

 $(function() {

//if (action_google.name != 'action_google') {
  var imgsrc = document.getElementsByName('imgsrc');

  var filename = document.getElementsByName('id');
  console.log(filename);
  var length = filename.length;

  for (i = 0; i < length; i++) {
    if (imgsrc[i].src === 'http://localhost:3000/icons/filetype-icon/jpg.png') {

      var hashID = filename[i].value.hashCode();
      var body = {
        "order": i,
        "hashID": hashID,
        "path": filename[i].value
      }

      $.ajax({
        type: "POST",
        url: "google/getthumbnail/",
        async: true,
        data: body,
        dataType: "JSON",
        success: function(json) {
          try {
            var hashCheck = filename[json[0]].value.hashCode();
            if (hashCheck == json[1]) {
              imgsrc[json[0]].src = json[2];
            }
          } catch (error) {

          }

        },
        beforeSend: function() {
          // (이미지 보여주기 처리)
          // $('.wrap-loading').removeClass('display-none');
        },
        complete: function() {
          // (이미지 감추기 처리)
          // $('.wrap-loading').addClass('display-none');
        },
        error: function(error) {
          console.log(error);
        }
      });

    }
  }

//}
});


  // function Upload() {
  //   $.ajax({
  //     type: "POST",
  //     url: "google/upload/",
  //     async: true,
  //     data: body,
  //     dataType: "JSON",
  //     success: function(json) {
  //       console.log(json);

  //       $('.replace').load("google/folder/<%=FolderID%>");
  //     },
  //     beforeSend: function() {
  //       // (이미지 보여주기 처리)
  //       $('.wrap-loading').removeClass('display-none');
  //     },
  //     complete: function() {
  //       // (이미지 감추기 처리)
  //       $('.wrap-loading').addClass('display-none');
  //     },
  //     error: function(error) {
  //       console.log(error);
  //     }
  //   });
  // }
</script>

<script src="js/loadfolder.js"></script>
<script src="js/lib/dropzone/dropzone.js"></script>
