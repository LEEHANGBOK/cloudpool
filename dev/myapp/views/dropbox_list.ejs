<div class="card drive-area" name='dropbox-area'>
  <div class="card-title">
    <h4>DropBox -> 여기 뭐 들어갈지 고민 ㄱㄱ</h4>
  </div>
  <div class="card-body">

    <form id="file_form" name='action_dropbox' method='post' >
      <button type="button" onClick='Submit(1)'>다운로드</button>
      <button type="button" onClick='Delete()'>삭제</button>

      <input type="text" name="filename" placeholder="newname">
      <button type="button" onClick='Rename()'>변경</button>
      <p></p>
      <select name="selecttype">
            <option value="document">문서</option>
            <option value="PDF">PDF</option>
            <option value="video">video</option>
            <option value="image">이미지</option>
            <option value="audio">오디오</option>
            <option value="etc">기타</option>
          </select>
      <button type="button" onClick='Select()'>골라보기</button>
      <p></p>
      <select name="searchfoldertype">
            <option value="root">전체 폴더</option>
            <option value="<%=FolderID%>">현재 폴더</option>
          </select>

      <input type="text" name="searchname" placeholder="검색">
      <button type="button" onClick='Search();'>검색하기</button>
      <p></p>
      <button type="button" onClick='Refresh()'>파일 리스트 최신화</button>
      <p></p>
      <input type="text" name="foldername" placeholder="newname">

      <button type="button" onClick='CreateFolder()'>폴더 만들기</button>
      <div class="table-position">
        <!-- <div class='dropzone-mask'></div> -->
        <div class="table-responsive">
          <div class="dropzone" name='dropbox-dropzone'>여기로 파일을 드래그해서 업로드 할 수 있습니다</div>
          <div class='current-folder' name="<%= FolderID %>"></div>
          <table class="table table-hover">

            <thead>
              <tr>
                <td> </td>
                <td>파일이름</td>
                <td>파일형식</td>
                <td>올린날짜</td>
                <td>파일용량</td>
              </tr>
            </thead>
            <!-- 이전 폴더로 이동 -->


            <tbody>

            <%

                      var folderList = FolderID.split("*");
                      if(folderList[0]==FolderID){
            %>

              <tr ondrop="dropFormove(event)" ondragleave="dragLeave(event)" ondragover="allowDrop(event)" value="<%=beforeFolder%>" class="folder-row">
                <td></td>
                <td><img src="icons/filetype-icon/back.png"></td>
                <!--폴더라면 폴더 ID를 넘겨서 다시 URL을 전송한다.-->
                <td><a data-id=' ' href="#" onclick="moveFolder_dropbox(this)" value="folder/">/</a></td>
                <td></td>
                <td></td>
              </tr>
              <%
                      }
                      else{
                        var beforeFolder='';
                        var beforeFolderName='';

                        for(var i=0; i < folderList.length-1 ; i++){
                          if(i == 0){
                            beforeFolder=folderList[i];
                            beforeFolderName=folderList[i];
                          }
                          else{
                            beforeFolder=beforeFolder+"*"+folderList[i];
                            beforeFolderName=beforeFolderName+"/"+folderList[i];
                          }
                        }

                      %>
                <tr ondrop="dropFormove(event)" ondragleave="dragLeave(event)" ondragover="allowDrop(event)" value="<%=beforeFolder%>" class="folder-row">
                  <td data-id='<%=beforeFolder%>'></td>
                  <td data-id='<%=beforeFolder%>'><img src="icons/filetype-icon/back.png"></td>
                  <!--폴더라면 폴더 ID를 넘겨서 다시 URL을 전송한다.-->
                  <td data-id='<%=beforeFolder%>'>
                    <a data-id='<%=beforeFolder%>' href="#" onclick="moveFolder_dropbox(this)" value='folder/<%=beforeFolder%>'>
                      <%=beforeFolderName%>
                    </a>
                  </td>
                  <td data-id='<%=beforeFolder%>'></td>
                  <td data-id='<%=beforeFolder%>'></td>
                </tr>
                <%
                      }
                      <!-- 한글 -> 유니코드 -->
                      function getImagePath(name){
                          var splitdata = name.split(".");
                          var mimetype = splitdata[splitdata.length-1];
                          var imagesrc='';
                          if(mimetype=='jpg'||mimetype=='jpeg'||mimetype=='png'||mimetype=='tiff'||mimetype=='tif'||mimetype=='gif'||mimetype=='bmp'){
                            imagesrc='icons/filetype-icon/jpg.png'
                          }
                          else if(mimetype==='avi'){
                            imagesrc='icons/filetype-icon/avi.png';
                          }
                          else if(mimetype==='csv'){
                            imagesrc='icons/filetype-icon/csv.png';
                          }
                          else if(mimetype==='doc'){
                            imagesrc='icons/filetype-icon/doc.png';
                          }
                          else if(mimetype==='iso'){
                            imagesrc='icons/filetype-icon/iso.png';
                          }
                          else if(mimetype==='mp3'){
                            imagesrc='icons/filetype-icon/mp3.png';
                          }
                          else if(mimetype==='mp4'){
                            imagesrc='icons/filetype-icon/mp4.png';
                          }
                          else if(mimetype==='pdf'){
                            imagesrc='icons/filetype-icon/pdf.png';
                          }
                          else if(mimetype==='ppt'||mimetype=='pptx'){
                            imagesrc='icons/filetype-icon/ppt.png';
                          }
                          else if(mimetype==='svg'){
                            imagesrc='icons/filetype-icon/svg.png';
                          }
                          else if(mimetype==='txt'){
                            imagesrc='icons/filetype-icon/txt.png';
                          }
                          else if(mimetype==='xls'){
                            imagesrc='icons/filetype-icon/xls.png';
                          }
                          else if(mimetype==='zip'){
                            imagesrc='icons/filetype-icon/zip.png';
                          }
                          else{
                            imagesrc='icons/filetype-icon/file.png';
                          }

                          return imagesrc;
                      }


                        <!--byte to kb,mb,gb  -->
                        function formatBytes(bytes,decimals) {
                           if(bytes == 0) return '0 Bytes';
                           var k = 1024,
                               dm = decimals || 2,
                               sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
                               i = Math.floor(Math.log(bytes) / Math.log(k));
                           return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
                        }
                          if(filelist.length>0){

                             for(var i=0; i < filelist.length; i++)

                             {
                                var oneItem = filelist[i];
                                var size = formatBytes(oneItem.size,3);

                                if(oneItem.mimeType=='folder'){
                                  if(FolderID==''){
                                    if(oneItem.name=='%'){
                                      var Foldername = oneItem.name+'25';
                                    }
                                    else var Foldername = oneItem.name;
                                  %>
                  <tr ondrop="dropFormove(event)" ondragleave="dragLeave(event)" ondragover="allowDrop(event)" value="<%=Foldername%>" class="folder-row">
                    <td><input class="checkbox" type="checkbox" name="name" value="<%=oneItem.name%>"></td>
                    <td ><img data-id='<%=Foldername%>' name="imgsrc" src="icons/filetype-icon/folder.png"></td>
                    <!--폴더라면 폴더 ID를 넘겨서 다시 URL을 전송한다.-->
                    <td >
                      <!-- <a href="/dropbox/<%=Foldername%>" id="Folder_<%=i%>" value="<%=Foldername%>"> -->

                      <a data-id='<%=Foldername%>' href="#" onclick="moveFolder_dropbox(this)" value='folder/<%=Foldername%>'>
                        <%=oneItem.name%>
                      </a>
                    </td>
                    <td data-id='<%=Foldername%>'>
                      <%=oneItem.modifiedTime%>
                    </td>
                    <td data-id='<%=Foldername%>'>
                      <%=size%>
                    </td>
                  </tr>
                  <%
                                  }
                                  else {
                                    if(oneItem.name=="%"){
                                      var Foldername = oneItem.name+'25';
                                    }
                                    else var Foldername = oneItem.name;
                                  %>
                    <tr ondrop="dropFormove(event)" ondragleave="dragLeave(event)" ondragover="allowDrop(event)" value="<%=FolderID%>*<%=Foldername%>" class="folder-row">
                      <td data-id='<%=FolderID%>*<%=Foldername%>'><input class="checkbox" type="checkbox" name="name" value="<%=oneItem.name%>"></td>
                      <td data-id='<%=FolderID%>*<%=Foldername%>'><img name="imgsrc" src="icons/filetype-icon/folder.png"></td>
                      <!--폴더라면 폴더 ID를 넘겨서 다시 URL을 전송한다.-->
                      <td data-id='<%=FolderID%>*<%=Foldername%>'>
                        <!-- <a href="/dropbox/<%=FolderID%>*<%=Foldername%>"  id="Folder_<%=i%>" value="<%=FolderID%>*<%=Foldername%>"> -->
                        <a href="#" onclick="moveFolder_dropbox(this)" value='folder/<%=FolderID%>*<%=Foldername%>'>
                          <%=oneItem.name%>
                        </a>
                      </td>
                      <td data-id='<%=FolderID%>*<%=Foldername%>'>
                        <%=oneItem.modifiedTime%>
                      </td>
                      <td data-id='<%=FolderID%>*<%=Foldername%>'>
                        <%=size%>
                      </td>
                    </tr>
                    <%
                                  }
                                }
                                else{

                                  <!--파일인 경우 name에 path까지 붙여서 한다.  -->
                                  for(var j=0 ; j < oneItem.path_list.length -1 ; j++){
                                    if(j==0){
                                      var filename='';
                                    }
                                    else{
                                      filename = filename + "*" + oneItem.path_list[j];
                                    }
                                  }
                                  filename = filename + "*" + oneItem.name;
                                  <!--여기서 이미지 파일이면 xhr 요청하고 받자  -->

                                  %>
                      <tr ondragstart="dragStart(event)" draggable="true" value="<%=filename%>" class="file-row">
                        <td><input class="checkbox" type="checkbox" name="name" value="<%=filename%>"></td>
                        <td><img name="imgsrc" src="<%=getImagePath(oneItem.name)%>"></td>
                        <td>
                          <%=oneItem.name%>
                        </td>
                        <td>
                          <%=oneItem.modifiedTime%>
                        </td>
                        <td>
                          <%=size%>
                        </td>
                      </tr>

                      <%
                              }
                            }
                          }
                        %>
              </tbody>
            </table>
      </div>
      <!-- end of table-responsive -->
    </div>
  </div>
  <!-- end of card-body -->
</div>
<!-- end of card -->
</form>
<div class="wrap-loading display-none">
  <div><img src="./images/loading1.gif" /></div>
</div>

<script language=javascript>
function checkSpace(str) {
  if (str.search(/\s/) != -1) {
    return true;
  } else {
    return false;
  }
}

function removeSpace(str) {
  if (checkSpace(str)) {
    var AfterFoldername = str.replace(/[ ]/g, "%20");
  } else {
    var AfterFoldername = str;
  }
  return AfterFoldername;
}

function dragStart(event) {
  event.dataTransfer.setData("data", event.target.attributes[2].nodeValue);
}

function allowDrop(event) {
  event.preventDefault();
  if(event){
    var targetFolderValue = $(event.currentTarget).attr('value');
    console.log('targetFolderValue: ' + targetFolderValue);
    $('table').find('.folder-row').each(function(e){

      if($(this).attr('value') == targetFolderValue){
        $(this).addClass('active');
      } else {
        $(this).removeClass('active');
      }
    });
  } else {
    $('table').find('.folder-row').each(function(e){
      $(this).removeClass('active');
    });
  }
}

function dragLeave(event){
  $('table').find('.folder-row').each(function(e){
    $(this).removeClass('active');
  });
}

function dropFormove(event) {
  event.preventDefault();
  var filename = event.dataTransfer.getData("data");
  var toFolder = $(event.currentTarget).attr('value');

  console.log(event);
  var body = {
    "filename": filename,
    "toFolder": toFolder
  }
  $.ajax({
    type: "POST",
    url: "dropbox/move/",
    async: true,
    data: body,
    dataType: "JSON",
    success: function(json) {
      console.log(json);

      var PresentFolderID = removeSpace("<%=FolderID%>");
      $('.replace').load("dropbox/folder/" + PresentFolderID, function(){
        $.getScript('/js/dropzone.js', function(data, textStatus, jqxhr) {
          console.log("load dropzone.js: " + textStatus);
        });
        $.getScript('/js/context_menu.js', function(data, textStatus, jqxhr) {
          console.log("load context_menu.js: " + textStatus);
        });
      });
    },
    beforeSend: function() {
      // (이미지 보여주기 처리)
      $('.wrap-loading').removeClass('display-none');
    },
    complete: function() {
      // (이미지 감추기 처리)
      $('.wrap-loading').addClass('display-none');
    },
    error: function(error) {
      console.log(error);
    }
  });
}


function Submit(index) {
  if (index === 1) {

    // action_dropbox.action='dropbox/download/<%=FolderID%>';
    action_dropbox.action = 'dropbox/download/';
  }
  action_dropbox.submit();
};

function Delete() {
  // 체크박스의 갯수를 변수에 담는다.
  var chklen = action_dropbox.name.length;
  var name = '';
  // 체크박스 갯수만큼 for 문을 돌려 체크된 놈의 value값을 가져온다.
  for (i = 0; i < chklen; i++) {
    if (action_dropbox.name[i].checked == true) {
      name = action_dropbox.name[i].value;
      break;
    }
  }
  if (name == '') {
    alert("삭제하실 파일이나 폴더를 체크해주세요");
  } else {
    var body = {
      "name": name
    }

    $.ajax({
      type: "POST",
      url: "dropbox/delete/",
      async: true,
      data: body,
      dataType: "JSON",
      success: function(result) {
        console.log(result);
        var PresentFolderID = removeSpace("<%=FolderID%>");
        Refresh();
      },
      beforeSend: function() {
        // (이미지 보여주기 처리)
        $('.wrap-loading').removeClass('display-none');
      },
      complete: function() {
        // (이미지 감추기 처리)
        $('.wrap-loading').addClass('display-none');
      },
      error: function(error) {
        console.log(error);
      }
    });
  }
}

function Refresh() {
  $.ajax({
    type: "GET",
    url: "dropbox/refresh/",
    async: false,
    success: function(json) {
      console.log(json);
      var PresentFolderID = removeSpace("<%=FolderID%>");
      $('.replace').load("dropbox/folder/" + PresentFolderID, function(){
        $.getScript('/js/dropzone.js', function(data, textStatus, jqxhr) {
          console.log("load dropzone.js: " + textStatus);
        });
        $.getScript('/js/context_menu.js', function(data, textStatus, jqxhr) {
          console.log("load context_menu.js: " + textStatus);
        });
      });
    },
    beforeSend: function() {
      // (이미지 보여주기 처리)
      $('.wrap-loading').removeClass('display-none');
    },
    complete: function() {
      // (이미지 감추기 처리)
      $('.wrap-loading').addClass('display-none');
    },
    error: function(error) {
      console.log(error);
    }
  });
}

function UploadSubmit() {
  uploadform.action = 'dropbox/upload/<%=FolderID%>';
  uploadform.submit();
  var PresentFolderID = removeSpace("<%=FolderID%>");
  $('.replace').load("dropbox/folder/" + PresentFolderID, function(){
    $.getScript('/js/dropzone.js', function(data, textStatus, jqxhr) {
      console.log("load dropzone.js: " + textStatus);
    });
    $.getScript('/js/context_menu.js', function(data, textStatus, jqxhr) {
      console.log("load context_menu.js: " + textStatus);
    });
  });
};




function launch_toast() {
  var x = document.getElementById("toast")
  x.className = "show";
  setTimeout(function() {
    x.className = x.className.replace("show", "");
  }, 15000);
}

function Rename() {
  // 체크박스의 갯수를 변수에 담는다.
  var chklen = action_dropbox.name.length;
  var originname = '';
  // 체크박스 갯수만큼 for 문을 돌려 체크된 놈의 value값을 가져온다.
  for (i = 0; i < chklen; i++) {
    if (action_dropbox.name[i].checked == true) {
      originname = action_dropbox.name[i].value;
      break;
    }
  }
  if (originname == '') {
    alert("이름을 변경하실 파일이나 폴더를 체크해주세요");
  } else {
    var newname = action_dropbox.filename.value;

    var body = {
      "originname": originname,
      "newname": newname
    }
    var PresentFolderID = removeSpace("<%=FolderID%>");
    $.ajax({
      type: "POST",
      url: "dropbox/rename/" + PresentFolderID,
      async: true,
      data: body,
      dataType: "JSON",
      success: function(json) {
        console.log(json);
        var PresentFolderID = removeSpace("<%=FolderID%>");
        $('.replace').load("dropbox/folder/" + PresentFolderID, function(){
          $.getScript('/js/dropzone.js', function(data, textStatus, jqxhr) {
            console.log("load dropzone.js: " + textStatus);
          });
          $.getScript('/js/context_menu.js', function(data, textStatus, jqxhr) {
            console.log("load context_menu.js: " + textStatus);
          });
        });
      },
      beforeSend: function() {
        // (이미지 보여주기 처리)
        $('.wrap-loading').removeClass('display-none');
      },
      complete: function() {
        // (이미지 감추기 처리)
        $('.wrap-loading').addClass('display-none');
      },
      error: function(error) {
        console.log(error);
      }
    });
  }
}


function Refresh() {
 $.ajax({
   type: "GET",
   url: "google/refresh/",
   async: false,
   success: function(json) {
     console.log(json);
     var PresentFolderID = removeSpace('<%=FolderID%>');
     $('.replace').load("dropbox/folder/" + PresentFolderID, function(){
       $.getScript('/js/dropzone.js', function(data, textStatus, jqxhr) {
         console.log("load dropzone.js: " + textStatus);
       });
     });
   },
   beforeSend: function() {
     // (이미지 보여주기 처리)
     $('.wrap-loading').removeClass('display-none');
   },
   complete: function() {
     // (이미지 감추기 처리)
     $('.wrap-loading').addClass('display-none');
   },
   error: function(error) {
     console.log(error);
   }
 });
}


function Select() {
  var selecttype = action_dropbox.selecttype.value;

  var body = {
    "selecttype": selecttype
  }
  var PresentFolderID = removeSpace("<%=FolderID%>");
  $.ajax({
    type: "POST",
    url: "dropbox/select/" + PresentFolderID,
    async: false,
    data: body,
    dataType: "JSON",
    success: function(json) {
      var obj = JSON.stringify(json);
      console.log(obj);
      $('.replace').load("dropbox/selectview/folder/" + PresentFolderID, {
        obj: obj
      }, function(){
        $.getScript('/js/dropzone.js', function(data, textStatus, jqxhr) {
          console.log("load dropzone.js: " + textStatus);
        });
        $.getScript('/js/context_menu.js', function(data, textStatus, jqxhr) {
          console.log("load context_menu.js: " + textStatus);
        });
      });
    },
    beforeSend: function() {
      // (이미지 보여주기 처리)
      $('.wrap-loading').removeClass('display-none');
    },
    complete: function() {
      // (이미지 감추기 처리)
      $('.wrap-loading').addClass('display-none');
    },
    error: function(error) {
      console.log(error);
    }
  });
}

function Search() {
  var searchname = action_dropbox.searchname.value;
  var searchFolder = action_dropbox.searchfoldertype.value;
  var PresentFolderID = removeSpace("<%=FolderID%>");
  var body = {
    "searchname": searchname,
    "searchfolder": searchFolder
  }
  $.ajax({
    type: "POST",
    url: "dropbox/search/" + PresentFolderID,
    async: false,
    data: body,
    dataType: "JSON",
    success: function(json) {
      var obj = JSON.stringify(json);
      $('.replace').load("dropbox/searchview/folder/" + PresentFolderID, {
        obj: obj
      }, function(){
        $.getScript('/js/dropzone.js', function(data, textStatus, jqxhr) {
          console.log("load dropzone.js: " + textStatus);
        });
        $.getScript('/js/context_menu.js', function(data, textStatus, jqxhr) {
          console.log("load context_menu.js: " + textStatus);
        });
      });
    },
    beforeSend: function() {
      // (이미지 보여주기 처리)
      $('.wrap-loading').removeClass('display-none');
    },
    complete: function() {
      // (이미지 감추기 처리)
      $('.wrap-loading').addClass('display-none');
    },
    error: function(error) {
      console.log(error);
    }
  });
}

String.prototype.hashCode = function() {
  var hash = 0,
    i, chr;
  if (this.length === 0) return hash;
  for (i = 0; i < this.length; i++) {
    chr = this.charCodeAt(i);
    hash = ((hash << 5) - hash) + chr;
    hash |= 0; // Convert to 32bit integer
  }
  return hash;
};

function CreateFolder() {
  var foldername = action_dropbox.foldername.value;
  var presentFolder = "<%=FolderID%>";
  if (presentFolder == undefined || presentFolder == '') {
    foldername = "/" + foldername;
  } else foldername = presentFolder + "/" + foldername;

  var body = {
    "foldername": foldername
  }
  $.ajax({
    type: "POST",
    url: "dropbox/makeFolder/",
    async: false,
    data: body,
    dataType: "JSON",
    success: function(json) {
      var obj = JSON.stringify(json);
      var PresentFolderID = removeSpace("<%=FolderID%>");
      $('.replace').load("dropbox/folder/" + PresentFolderID, function(){
        $.getScript('/js/dropzone.js', function(data, textStatus, jqxhr) {
          console.log("load dropzone.js: " + textStatus);
        });
        $.getScript('/js/context_menu.js', function(data, textStatus, jqxhr) {
          console.log("load context_menu.js: " + textStatus);
        });
      });
    },
    beforeSend: function() {
      // (이미지 보여주기 처리)
      $('.wrap-loading').removeClass('display-none');
    },
    complete: function() {
      // (이미지 감추기 처리)
      $('.wrap-loading').addClass('display-none');
    },
    error: function(error) {
      console.log(error);
    }
  });
}
$(function() {

  //if (action_dropbox.name != 'action_dropbox') {
    var imgsrc = document.getElementsByName('imgsrc');

    var filename = document.getElementsByName('name');
    console.log(filename);
    var length = filename.length;

    for (i = 0; i < length; i++) {
      if (imgsrc[i].src === 'http://localhost:3000/icons/filetype-icon/jpg.png') {

        var hashID = filename[i].value.hashCode();
        var body = {
          "order": i,
          "hashID": hashID,
          "path": filename[i].value
        }

        $.ajax({
          type: "POST",
          url: "dropbox/thumbnail/",
          async: true,
          data: body,
          dataType: "JSON",
          success: function(json) {
            try {
              var hashCheck = filename[json[0]].value.hashCode();
              if (hashCheck == json[1]) {
                imgsrc[json[0]].src = "data:image/jpeg;base64," + json[2];
              }
            } catch (error) {

            }

          },
          beforeSend: function() {
            // (이미지 보여주기 처리)
            // $('.wrap-loading').removeClass('display-none');
          },
          complete: function() {
            // (이미지 감추기 처리)
            // $('.wrap-loading').addClass('display-none');
          },
          error: function(error) {
            console.log(error);
          }
        });

      }
    }

  //}
});



</script>
<style type="text/css">
  .wrap-loading {
    /*화면 전체를 어둡게 합니다.*/

    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.2);
    /*not in ie */
    filter: progid:DXImageTransform.Microsoft.Gradient(startColorstr='#20000000', endColorstr='#20000000');
    /* ie */
  }

  .wrap-loading div {
    /*로딩 이미지*/
    position: fixed;
    top: 50%;
    left: 50%;
    margin-left: -21px;
    margin-top: -21px;
  }

  .display-none {
    /*감추기*/
    display: none;
  }

  td>img {
    height:36px;
    width:36px;
  }

</style>

<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/0.10.0/lodash.min.js"></script>
<script src="js/loadfolder.js"></script>
<!-- <script src="js/upload.js"></script> -->
